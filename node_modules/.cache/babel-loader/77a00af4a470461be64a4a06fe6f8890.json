{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Documents\\\\Sites\\\\Dallenad React\\\\dallenad\\\\src\\\\components\\\\Hero.js\";\nimport React from 'react';\nimport Lottie from 'react-lottie';\nimport animationData from '../json/intro.json';\nimport heroVideo from '../videos/Photomanip.mp4';\nimport { Row, Jumbotron, Container } from 'react-bootstrap';\nexport default class Hero extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isStopped: false,\n      isPaused: false\n    };\n  }\n\n  render() {\n    //let data = this.props.data;\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationData,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n      }\n    };\n    return React.createElement(Jumbotron, {\n      fluid: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      playsinline: \"playsinline\",\n      autoplay: \"autoplay\",\n      muted: \"muted\",\n      loop: \"loop\",\n      className: \"d-none d-sm-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: heroVideo,\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:\\My Documents\\Sites\\Dallenad React\\dallenad\\src\\components\\Hero.js"],"names":["React","Lottie","animationData","heroVideo","Row","Jumbotron","Container","Hero","Component","constructor","props","state","isStopped","isPaused","render","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,SACCC,GADD,EAECC,SAFD,EAGCC,SAHD,QAIO,iBAJP;AAMA,eAAe,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAb;AACH;;AAEJC,EAAAA,MAAM,GAAG;AACF;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,IAAI,EAAE,IADa;AAEnBC,MAAAA,QAAQ,EAAE,IAFS;AAGnBf,MAAAA,aAAa,EAAEA,aAHI;AAInBgB,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,mBAAmB,EAAE;AADP;AAJC,KAAvB;AASN,WACC,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACa,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,QAAQ,EAAC,UAA1C;AAAqD,MAAA,KAAK,EAAC,OAA3D;AAAmE,MAAA,IAAI,EAAC,MAAxE;AAA+E,MAAA,SAAS,EAAC,mBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEhB,SAAb;AAAwB,MAAA,IAAI,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADb,CADD;AAUA;;AA3BgD","sourcesContent":["import React from 'react';\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../json/intro.json';\r\nimport heroVideo from '../videos/Photomanip.mp4';\r\n\r\nimport {\r\n\tRow,\r\n\tJumbotron,\r\n\tContainer\r\n} from 'react-bootstrap';\r\n\r\nexport default class Hero extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isStopped: false, isPaused: false};\r\n    }\r\n\r\n\trender() {\r\n        //let data = this.props.data;\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true,\r\n            animationData: animationData,\r\n            rendererSettings: {\r\n                preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n\r\n\t\treturn (\r\n\t\t\t<Jumbotron fluid=\"true\">\r\n                <Container>\r\n\r\n                    <video playsinline=\"playsinline\" autoplay=\"autoplay\" muted=\"muted\" loop=\"loop\" className=\"d-none d-sm-block\">\r\n                        <source src={heroVideo} type=\"video/mp4\" />\r\n                    </video>\r\n                </Container>\r\n            </Jumbotron>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}